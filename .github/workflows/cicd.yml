name: CI-CD

on:
  push:
    branches: ["develop"]

permissions:
  contents: write
  packages: write

env:
  OS: linux
  ARCH: amd64
  REGISTRY: ghcr.io
  OWNER: annasever
  APP: kbot

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set version and tags
        run: |
          VERSION="v1.0.0"
          SHORT_SHA=${GITHUB_SHA::7}
          TAG_BASE="${VERSION}-${SHORT_SHA}"
          echo "TAG_BASE=$TAG_BASE" >> $GITHUB_ENV
          echo "TAG=$TAG_BASE-${OS}-${ARCH}" >> $GITHUB_ENV
          echo "IMAGE=${REGISTRY}/${OWNER}/${APP}" >> $GITHUB_ENV

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push
        run: |
          docker build --platform=${OS}/${ARCH} -t ${IMAGE}:${TAG} .
          docker push ${IMAGE}:${TAG}

      - name: Update Helm values
        run: |
          sed -i 's|^\(\s*registry:\s*\).*|\1"'"${REGISTRY}"'"|' helm/values.yaml
          sed -i 's|^\(\s*repository:\s*\).*|\1"'"${OWNER}/${APP}"'"|' helm/values.yaml
          sed -i 's|^\(\s*tag:\s*\).*|\1"'"${TAG_BASE}"'"|' helm/values.yaml
          sed -i 's|^\(\s*os:\s*\).*|\1'"${OS}"'|' helm/values.yaml
          sed -i 's|^\(\s*arch:\s*\).*|\1'"${ARCH}"'|' helm/values.yaml
          sed -i 's|^\(appVersion:\s*\).*|\1"'"${TAG_BASE}"'"|' helm/Chart.yaml

      - name: Commit updated Helm chart
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git add helm/values.yaml helm/Chart.yaml
            git commit -m "update image tag to ${TAG_BASE}"
            git pull --rebase origin develop
            git push
          fi

      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd

      - name: ArgoCD login
        run: |
          argocd login ${{ secrets.ARGOCD_SERVER }} \
            --username ${{ secrets.ARGOCD_USERNAME }} \
            --password ${{ secrets.ARGOCD_PASSWORD }} \
            --insecure

      - name: Sync Application
        run: |
          argocd app sync kbot
          argocd app wait kbot --health --timeout 300

      - name: Print final image
        run: echo "${IMAGE}:${TAG}"
